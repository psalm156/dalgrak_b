package springbootApplication.service;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.entity.StringEntity;
import org.apache.http.util.EntityUtils;
import org.springframework.stereotype.Service;

@Service
public class PushService {
    private final String publicKey;
    private final String privateKey;
    private final String subject;

    public PushService(String publicKey, String privateKey, String subject) {
        this.publicKey = publicKey;
        this.privateKey = privateKey;
        this.subject = subject;
    }

    // 실제로 푸시 알림을 보내는 메서드
    public HttpResponse send(String endpoint, String message, String auth, String p256dh) {
        // HTTP 클라이언트 생성
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            // POST 요청 객체 생성
            HttpPost postRequest = new HttpPost(endpoint);
            
            // 푸시 알림의 body를 설정
            String jsonBody = "{\"message\":\"" + message + "\",\"auth\":\"" + auth + "\",\"p256dh\":\"" + p256dh + "\"}";
            StringEntity entity = new StringEntity(jsonBody);
            postRequest.setEntity(entity);
            postRequest.setHeader("Content-Type", "application/json");

            // 요청 실행
            HttpResponse response = httpClient.execute(postRequest);

            // 응답 코드 확인
            if (response.getStatusLine().getStatusCode() == 201) {
                System.out.println("푸시 알림 전송 성공: " + response.getStatusLine().getReasonPhrase());
            } else {
                System.out.println("푸시 알림 전송 실패: " + response.getStatusLine().getReasonPhrase());
            }

            return response;

        } catch (Exception e) {
            System.err.println("푸시 알림 전송 중 오류 발생: " + e.getMessage());
            e.printStackTrace();
            return null;
        }
    }
}
