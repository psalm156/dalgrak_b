package springbootApplication.service;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;
import springbootApplication.domain.Comment;
import springbootApplication.repository.CommentRepository;
import springbootApplication.repository.UserRepository;
import springbootApplication.service.WebPushService;
<<<<<<<< HEAD:dalgrak/src/main/java/springbootApplication/service/CommentService.java
========

>>>>>>>> f876882b60a328bcf620df82a2bea48840362985:.metadata/.plugins/org.eclipse.core.resources/.history/78/100e987331080010158cd3f39d4fe5c6

@Service
@RequiredArgsConstructor
public class CommentService {

    private final CommentRepository commentRepository;
    private final UserRepository userRepository;
    private final WebPushService webPushService;

    // 특정 게시글의 댓글 가져오기
    public List<Comment> getCommentsByPostId(Long postId) {
        return commentRepository.findByPostId(postId);
    }

    // 댓글 삭제 (본인만 가능)
    @Transactional
    public void deleteComment(Long commentId, Long userId) {
        Comment comment = commentRepository.findById(commentId)
                .orElseThrow(() -> new RuntimeException("댓글을 찾을 수 없습니다."));

        if (!comment.getUserId().equals(userId)) {
            throw new RuntimeException("You can only delete your own comment!");
        }

        commentRepository.delete(comment);
    }

    // 댓글 추가
    @Transactional
    public void addComment(Long postId, Long userId, String content) {
        Comment comment = new Comment(postId, userId, content);
        commentRepository.save(comment);

<<<<<<<< HEAD:dalgrak/src/main/java/springbootApplication/service/CommentService.java
========
        List<Subscription> subscriptions = subscriptionRepository.findByCommentId(comment.getId());
        
        if (subscriptions != null && !subscriptions.isEmpty()) {
        for (Subscription subscription : subscriptions) {
            String message = userId + "님이 댓글을 달았습니다.";
            webPushService.sendPushNotification(subscription, message);
        	}
        }
>>>>>>>> f876882b60a328bcf620df82a2bea48840362985:.metadata/.plugins/org.eclipse.core.resources/.history/78/100e987331080010158cd3f39d4fe5c6
    }
}
