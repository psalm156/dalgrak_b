package springbootApplication.service;

import nl.martijndwars.webpush.Notification;
import org.apache.http.HttpResponse;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

@Service
public class WebPushService {

    private final PushService pushService;  // PushService를 주입 받음

    // 생성자 주입 방식으로 PushService를 주입
    public WebPushService(PushService pushService) {
        this.pushService = pushService;
    }

    // 푸시 알림을 보내는 메서드
    public void sendPushNotification(String endpoint, String message, String auth, String p256dh) {
        try {
            // Notification 객체 생성 (푸시 알림 전송을 위한 정보 설정)
            Notification notification = new Notification(endpoint, auth, p256dh, message);

            // PushService를 이용해 알림을 전송하고, 응답을 받음
            HttpResponse response = pushService.send(notification);  // PushService의 send 메서드 호출

            // 응답 상태 코드 확인
            if (response.getStatusLine().getStatusCode() == 201) {
                System.out.println("푸시 알림 전송 성공: " + response.getStatusLine().getReasonPhrase());
            } else {
                System.out.println("푸시 알림 전송 실패: " + response.getStatusLine().getReasonPhrase());
            }

        } catch (Exception e) {
            System.err.println("푸시 알림 전송 중 오류 발생: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
